// <auto-generated />
using System;
using AccountBalance.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AccountBalance.Migrations
{
    [DbContext(typeof(AccountBalanceContext))]
    [Migration("20221017093623_Database")]
    partial class Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AccountBalance.Models.MoneyAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric")
                        .HasColumnName("balance");

                    b.Property<decimal>("Expences")
                        .HasColumnType("numeric")
                        .HasColumnName("expences");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric")
                        .HasColumnName("salary");

                    b.Property<decimal>("Saved")
                        .HasColumnType("numeric")
                        .HasColumnName("saved");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_moneyaccount");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_moneyaccount_user_id");

                    b.ToTable("moneyaccount", (string)null);
                });

            modelBuilder.Entity("AccountBalance.Models.MoneyHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("HistoryType")
                        .HasColumnType("integer")
                        .HasColumnName("history_type");

                    b.Property<int?>("MoneyAccId")
                        .HasColumnType("integer")
                        .HasColumnName("money_acc_id");

                    b.HasKey("Id")
                        .HasName("pk_moneyhistory");

                    b.HasIndex("MoneyAccId")
                        .HasDatabaseName("ix_moneyhistory_money_acc_id");

                    b.ToTable("moneyhistory", (string)null);
                });

            modelBuilder.Entity("AccountBalance.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("AccountBalance.Models.MoneyAccount", b =>
                {
                    b.HasOne("AccountBalance.Models.User", "User")
                        .WithOne("MoneyAccounts")
                        .HasForeignKey("AccountBalance.Models.MoneyAccount", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_moneyaccount_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AccountBalance.Models.MoneyHistory", b =>
                {
                    b.HasOne("AccountBalance.Models.MoneyAccount", "MoneyAccount")
                        .WithMany("MoneyHistories")
                        .HasForeignKey("MoneyAccId")
                        .HasConstraintName("fk_moneyhistory_moneyaccount_money_acc_id");

                    b.Navigation("MoneyAccount");
                });

            modelBuilder.Entity("AccountBalance.Models.MoneyAccount", b =>
                {
                    b.Navigation("MoneyHistories");
                });

            modelBuilder.Entity("AccountBalance.Models.User", b =>
                {
                    b.Navigation("MoneyAccounts")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
